{"version":3,"sources":["images/logo.svg","styles.js","components/Checkbox/styles.js","components/Checkbox/index.jsx","components/FilterPanel/styles.js","components/FilterPanel/index.jsx","components/Segment/styles.js","components/Segment/index.jsx","components/Ticket/styles.js","components/Ticket/index.jsx","components/TicketsList/styles.js","components/TicketsList/index.jsx","components/SortTabs/styles.js","components/SortTabs/index.jsx","components/Logo/styles.js","components/Logo/index.jsx","components/Loader/styles.js","components/Loader/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Main","styled","div","Content","Icon","svg","CheckboxContainer","HiddenCheckbox","input","attrs","type","VisibleCheckbox","props","theme","checkbox","checked","Checkbox","className","viewBox","d","defaultProps","FilterBlock","Header","h3","Body","Label","label","TransferSort","items","onChange","style","flexGrow","map","name","text","isActive","key","fontWeight","SegmentContainer","Item","Title","Text","p","formatDate","val","date","Date","min","getUTCMinutes","slice","hour","getUTCHours","Segment","time","origin","destination","stops","duration","destTime","getTime","Math","floor","length","join","TicketContainer","primary","Logo","Ticket","carrier","price","rows","segments","segment","uniqueId","toLocaleString","display","marginLeft","marginRight","alt","src","TicketsContainer","TicketsList","isLoading","tickets","item","textAlign","SortTabsContainer","Tab","active","SortTabs","onClick","LogoContainer","logo","LoaderContainer","Loader","marginTop","App","state","activeTab","filters","sortTickets","field","obj","reduce","acc","cur","orderBy","filterTickets","filter","count","some","getSearchKey","axios","get","getTickets","params","searchId","then","data","setState","stop","catch","handleCheckbox","newFilters","elem","resetCheckboxes","find","handleTabChange","this","filtered","sorted","FilterPanel","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc0f1a11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0c089234.svg\";","import styled from 'styled-components';\r\n\r\nexport const Main = styled.div`\r\n  width: 768px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  flex-grow: 5;\r\n  margin: 0.5rem;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Icon = styled.svg`\r\n  fill: #fff;\r\n  display: inline;\r\n  vertical-align: middle;\r\n  margin: 4px;\r\n`;\r\n\r\nexport const CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n`;\r\n\r\nexport const HiddenCheckbox = styled.input.attrs(() => ({ type: 'checkbox' }))`\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`;\r\n\r\nexport const VisibleCheckbox = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 1px solid ${props => props.theme.checkbox};\r\n  border-radius: 2px;\r\n  margin-right: 10px;\r\n  transition: all 0.25s;\r\n\r\n  ${Icon} {\r\n    fill: ${props => (props.checked ? '#2196f3' : '#fff')};\r\n  }\r\n\r\n  ${HiddenCheckbox}:focus + & {\r\n    box-shadow: 0 0 0 3px ${props => props.theme.checkbox};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CheckboxContainer, VisibleCheckbox, HiddenCheckbox, Icon } from './styles';\r\n\r\nconst Checkbox = ({ className, checked, ...props }) => (\r\n  <CheckboxContainer className={className}>\r\n    <HiddenCheckbox checked={checked} {...props} />\r\n    <VisibleCheckbox checked={checked}>\r\n      <Icon viewBox=\"0 0 12 8\">\r\n        <path d=\"M4.28571 8L0 4.16123L1.20857 3.0787L4.28571 5.82726L10.7914 0L12 1.09021L4.28571 8Z\" />\r\n      </Icon>\r\n    </VisibleCheckbox>\r\n  </CheckboxContainer>\r\n);\r\n\r\nCheckbox.propTypes = {\r\n  className: PropTypes.string,\r\n  checked: PropTypes.bool.isRequired,\r\n};\r\n\r\nCheckbox.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default Checkbox;\r\n","import styled from 'styled-components';\r\n\r\nexport const FilterBlock = styled.div`\r\n  padding: 1rem 0;\r\n  margin: 0.5rem;\r\n  background-color: #fff;\r\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  max-height: 240px;\r\n`;\r\n\r\nexport const Header = styled.h3`\r\n  font-size: 0.75rem;\r\n  padding: 0 20px 0.5rem;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  margin: 0;\r\n  color: #4a4a4a;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.75rem;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  padding: 0.5rem 0;\r\n  padding-left: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f1fcff;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from '../Checkbox';\r\nimport { FilterBlock, Header, Body, Label } from './styles';\r\n\r\nconst TransferSort = props => {\r\n  const { items, onChange } = props;\r\n  return (\r\n    <div style={{ flexGrow: 1 }}>\r\n      <FilterBlock>\r\n        <Header>Количество пересадок</Header>\r\n        <Body>\r\n          {items.map(({ name, text, isActive }) => (\r\n            <Label key={name}>\r\n              <Checkbox checked={isActive} onChange={onChange(name, !isActive)} />\r\n              <span style={{ fontWeight: 'normal' }}>{text}</span>\r\n            </Label>\r\n          ))}\r\n        </Body>\r\n      </FilterBlock>\r\n    </div>\r\n  );\r\n};\r\n\r\nTransferSort.propTypes = {\r\n  items: PropTypes.instanceOf(Array).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TransferSort;\r\n","import styled from 'styled-components';\r\n\r\nexport const SegmentContainer = styled.div`\r\n  display: flex;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const Item = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  color: #a0b0b9;\r\n  font-size: 0.75rem;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  margin: 0;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  color: #4a4a4a;\r\n  font-size: 0.75rem;\r\n  font-weight: 600;\r\n  margin: 0;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SegmentContainer, Item, Title, Text } from './styles';\r\n\r\nconst formatDate = val => {\r\n  const date = new Date(val);\r\n  const min = `0${new Date(date).getUTCMinutes()}`.slice(-2);\r\n  const hour = `0${new Date(date).getUTCHours()}`.slice(-2);\r\n  return `${hour}:${min}`;\r\n};\r\n\r\nconst getTimePeriod = min => `${Math.floor(min / 60)}ч ${min % 60}м`;\r\n\r\nconst getEndTime = (start, time) => {\r\n  return new Date(start).getTime() + time * 60 * 1000;\r\n};\r\n\r\nconst Segment = props => {\r\n  const { origin, destination, stops, date, duration } = props;\r\n  const destTime = getEndTime(date, duration);\r\n  return (\r\n    <SegmentContainer>\r\n      <Item>\r\n        <Title>{`${origin} - ${destination}`}</Title>\r\n        <Text>{`${formatDate(date)} - ${formatDate(destTime)}`}</Text>\r\n      </Item>\r\n      <Item>\r\n        <Title>в пути</Title>\r\n        <Text>{getTimePeriod(duration)}</Text>\r\n      </Item>\r\n      <Item>\r\n        <Title>{`${stops.length} пересадки`}</Title>\r\n        <Text>{stops.join(', ')}</Text>\r\n      </Item>\r\n    </SegmentContainer>\r\n  );\r\n};\r\n\r\nSegment.propTypes = {\r\n  origin: PropTypes.string.isRequired,\r\n  destination: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  duration: PropTypes.number.isRequired,\r\n  stops: PropTypes.instanceOf(Array).isRequired,\r\n};\r\n\r\nexport default Segment;\r\n","import styled from 'styled-components';\r\n\r\nexport const TicketContainer = styled.div`\r\n  padding: 1.25rem;\r\n  margin-bottom: 1rem;\r\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  color: ${props => props.theme.primary};\r\n  display: flex;\r\n  h2 {\r\n    margin: 0;\r\n    flex-grow: 1;\r\n    align-self: left;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  margin-top: 0.5rem;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { uniqueId } from 'lodash';\r\nimport Segment from '../Segment';\r\nimport { TicketContainer, Header, Logo } from './styles';\r\n\r\nconst Ticket = props => {\r\n  const { carrier, price, segments } = props;\r\n  const rows = segments.map(segment => <Segment key={uniqueId()} {...segment} />);\r\n  return (\r\n    <TicketContainer>\r\n      <Header>\r\n        <h2>{`${price.toLocaleString()} Р`}</h2>\r\n        <Logo>\r\n          <img\r\n            style={{ display: 'block', marginLeft: 'auto', marginRight: '2rem' }}\r\n            alt=\"logo\"\r\n            src={`//pics.avs.io/99/36/${carrier}.png`}\r\n          />\r\n        </Logo>\r\n      </Header>\r\n      {rows.length > 0 && rows}\r\n    </TicketContainer>\r\n  );\r\n};\r\n\r\nTicket.propTypes = {\r\n  carrier: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  segments: PropTypes.instanceOf(Array).isRequired,\r\n};\r\n\r\nexport default Ticket;\r\n","import styled from 'styled-components';\r\n\r\nconst TicketsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default TicketsContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { uniqueId } from 'lodash';\r\nimport Ticket from '../Ticket';\r\nimport TicketsContainer from './styles';\r\n\r\nconst TicketsList = props => {\r\n  const { items, isLoading } = props;\r\n  const tickets = items.slice(0, 5).map(item => <Ticket key={uniqueId()} {...item} />);\r\n  return tickets.length > 0 || isLoading ? (\r\n    <TicketsContainer>{tickets}</TicketsContainer>\r\n  ) : (\r\n    <div style={{ textAlign: 'center' }}>Не найдено билетов</div>\r\n  );\r\n};\r\n\r\nTicketsList.propTypes = {\r\n  items: PropTypes.instanceOf(Array).isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TicketsList;\r\n","import styled from 'styled-components';\r\n\r\nexport const SortTabsContainer = styled.div`\r\n  margin-bottom: 1rem;\r\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  display: flex;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Tab = styled.div`\r\n  font-size: 0.725rem;\r\n  padding: 1.25rem;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  transition: all 0.25s;\r\n  color: ${({ label, active }) => (label === active ? '#fff' : '#000')};\r\n  background-color: ${({ label, active, theme }) => (label === active ? theme.primary : '#fff')};\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SortTabsContainer, Tab } from './styles';\r\n\r\nconst SortTabs = props => {\r\n  const { active, onClick } = props;\r\n  return (\r\n    <SortTabsContainer>\r\n      <Tab label=\"cheap\" active={active} onClick={onClick('cheap')}>\r\n        самый дешевый\r\n      </Tab>\r\n      <Tab label=\"fast\" active={active} onClick={onClick('fast')}>\r\n        самый быстрый\r\n      </Tab>\r\n    </SortTabsContainer>\r\n  );\r\n};\r\n\r\nSortTabs.propTypes = {\r\n  active: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SortTabs;\r\n","import styled from 'styled-components';\r\n\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  padding: 50px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default LogoContainer;\r\n","import React from 'react';\r\nimport LogoContainer from './styles';\r\nimport logo from '../../images/logo.svg';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <LogoContainer>\r\n      <img src={logo} alt=\"logo\" />\r\n    </LogoContainer>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import styled from 'styled-components';\r\n\r\nconst LoaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  .lds-ellipsis {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n  .lds-ellipsis div {\r\n    position: absolute;\r\n    top: 33px;\r\n    width: 13px;\r\n    height: 13px;\r\n    border-radius: 50%;\r\n    background: ${props => props.theme.primary};\r\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n  }\r\n  .lds-ellipsis div:nth-child(1) {\r\n    left: 8px;\r\n    animation: lds-ellipsis1 0.6s infinite;\r\n  }\r\n  .lds-ellipsis div:nth-child(2) {\r\n    left: 8px;\r\n    animation: lds-ellipsis2 0.6s infinite;\r\n  }\r\n  .lds-ellipsis div:nth-child(3) {\r\n    left: 32px;\r\n    animation: lds-ellipsis2 0.6s infinite;\r\n  }\r\n  .lds-ellipsis div:nth-child(4) {\r\n    left: 56px;\r\n    animation: lds-ellipsis3 0.6s infinite;\r\n  }\r\n  @keyframes lds-ellipsis1 {\r\n    0% {\r\n      transform: scale(0);\r\n    }\r\n    100% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n  @keyframes lds-ellipsis3 {\r\n    0% {\r\n      transform: scale(1);\r\n    }\r\n    100% {\r\n      transform: scale(0);\r\n    }\r\n  }\r\n  @keyframes lds-ellipsis2 {\r\n    0% {\r\n      transform: translate(0, 0);\r\n    }\r\n    100% {\r\n      transform: translate(24px, 0);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default LoaderContainer;\r\n","import React from 'react';\r\nimport LoaderContainer from './styles';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <LoaderContainer>\r\n      <div className=\"lds-ellipsis\" style={{ marginTop: '-30px' }}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n    </LoaderContainer>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { orderBy } from 'lodash';\nimport { ThemeProvider } from 'styled-components';\nimport { Main, Content } from './styles';\nimport './App.css';\nimport FilterPanel from './components/FilterPanel';\nimport TicketsList from './components/TicketsList';\nimport SortTabs from './components/SortTabs';\nimport Logo from './components/Logo';\nimport Loader from './components/Loader';\n\nconst theme = {\n  primary: '#2196F3',\n  checkbox: 'rgba(33, 150, 243, 0.3)',\n};\n\nclass App extends Component {\n  state = {\n    activeTab: 'cheap',\n    isLoading: true,\n    tickets: [],\n    filters: [\n      { name: 'all', text: 'Все', isActive: false },\n      { name: 'withoutTransfer', text: 'Без пересадок', isActive: true, stops: 0 },\n      { name: 'oneTransfer', text: '1 пересадка', isActive: false, stops: 1 },\n      { name: 'twoTransfers', text: '2 пересадки', isActive: false, stops: 2 },\n      { name: 'threeTransfers', text: '3 пересадки', isActive: false, stops: 3 },\n    ],\n  };\n\n  async componentDidMount() {\n    const {\n      data: { searchId },\n    } = await this.getSearchKey();\n    this.getTickets(searchId);\n  }\n\n  sortTickets = (tickets, label = 'cheap') => {\n    const field =\n      label === 'cheap' ? 'price' : obj => obj.segments.reduce((acc, cur) => acc + cur.duration, 0);\n    return orderBy(tickets, [field], ['asc']);\n  };\n\n  filterTickets = tickets => {\n    const { filters } = this.state;\n    const byStops = (obj, count) => obj.segments.some(segment => segment.stops.length === count);\n    const activeFilters = filters.filter(item => item.isActive);\n    return activeFilters.reduce((acc, cur) => {\n      return [...acc, ...tickets.filter(item => byStops(item, cur.stops))];\n    }, []);\n  };\n\n  getSearchKey = () => axios.get('https://front-test.beta.aviasales.ru/search');\n\n  getTickets = key => {\n    const { tickets } = this.state;\n    axios\n      .get('https://front-test.beta.aviasales.ru/tickets', { params: { searchId: key } })\n      .then(({ data }) => {\n        this.setState({ tickets: [...tickets, ...data.tickets] });\n        if (data.stop) {\n          this.setState({ isLoading: false });\n          return;\n        }\n        this.getTickets(key);\n      })\n      .catch(() => this.getTickets(key));\n  };\n\n  handleCheckbox = (name, isActive) => () => {\n    if (name === 'all') {\n      this.resetCheckboxes();\n      return;\n    }\n    const { filters } = this.state;\n    const newFilters = filters.map(elem => {\n      return elem.name === name ? { ...elem, isActive } : elem;\n    });\n    this.setState({ filters: newFilters });\n  };\n\n  resetCheckboxes = () => {\n    const { filters } = this.state;\n    const { isActive } = filters.find(({ name }) => name === 'all');\n    const newFilters = filters.map(elem => ({ ...elem, isActive: !isActive }));\n    this.setState({ filters: newFilters });\n  };\n\n  handleTabChange = label => () => {\n    this.setState({ activeTab: label });\n  };\n\n  render() {\n    const { tickets, filters, activeTab, isLoading } = this.state;\n    const filtered = this.filterTickets(tickets);\n    const sorted = this.sortTickets(filtered, activeTab);\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Logo />\n          <Main>\n            <FilterPanel items={filters} onChange={this.handleCheckbox} />\n            <Content>\n              <SortTabs active={activeTab} onClick={this.handleTabChange} />\n              {isLoading && <Loader />}\n              <TicketsList items={sorted} isLoading={isLoading} />\n            </Content>\n          </Main>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}